# Port configuration to avoid conflicts
server.port=8080

# Gives us access to the H2 database web console
spring.h2.console.enabled=true

# Generates the database *only* if it's not there yet
spring.jpa.hibernate.ddl-auto=update

# Creates the database in a file
spring.datasource.url=jdbc:h2:file:~/social-multiplication;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE

# For educational purposes we will show the SQL in console
spring.jpa.properties.hibernate.show_sql=true

## RabbitMQ configuration
multiplication.exchange=multiplication_exchange
multiplication.solved.key=multiplication.solved

# Service Discovery configuration
eureka.client.service-url.default-zone=http://localhost:8761/eureka/

spring.cloud.config.override-system-properties: false
spring.cloud.config.allow-override: true
spring.cloud.config.override-none: true
